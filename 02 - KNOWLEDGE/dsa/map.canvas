{
  "nodes": [
    {
      "id": "f9026289e2f60742",
      "type": "group",
      "x": 4160,
      "y": -14560,
      "width": 2111,
      "height": 1462,
      "label": "C++"
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/heap.md",
      "id": "a1465859b4078a9e",
      "x": 902,
      "y": -14838,
      "width": 400,
      "height": 400
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/priority_queue.md",
      "id": "95fec2fab8bc1c21",
      "x": 1041,
      "y": -14129,
      "width": 400,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Priority Queue\n\nC++\n```cpp\npriority_queue <int> pq;\npq.push(1);\npq.top();\npq.pop();\n```\n\nJava\n```java\nprivate PriorityQueue <T> pq = new PriorityQueue<>();\n```",
      "id": "d64af4271b7fbfe1",
      "x": 1708,
      "y": -14551,
      "width": 490,
      "height": 362
    },
    {
      "type": "text",
      "text": "# SET\n```cpp\nset <int,int> s;\n```\n {key: value} pair\n \n* no repetition\n* ordered",
      "id": "cd3dd135bbccc0f6",
      "x": 2014,
      "y": -13578,
      "width": 296,
      "height": 265
    },
    {
      "type": "text",
      "text": "# UNORDERED_SET\n```cpp\nunordered_set <int> unique;\n```\n {key: value} pair\n\n* insertion O(1) - cuz it uses a #hashtable \n* no repetition\n* no ordered\n",
      "id": "6b0458c31d8f1f18",
      "x": 2680,
      "y": -14031,
      "width": 352,
      "height": 302
    },
    {
      "type": "text",
      "text": "# DATA STRUCTURES & STL",
      "id": "84b3961964a48717",
      "x": -361,
      "y": -13248,
      "width": 447,
      "height": 110,
      "color": "6"
    },
    {
      "type": "text",
      "text": "## lineal",
      "id": "0899069cb86ec7f5",
      "x": -882,
      "y": -13211,
      "width": 158,
      "height": 50,
      "color": "6"
    },
    {
      "type": "text",
      "text": "## custom",
      "id": "d00bd0bd310848a0",
      "x": -275,
      "y": -12856,
      "width": 182,
      "height": 60
    },
    {
      "type": "text",
      "text": "## non-lineal",
      "id": "2cc2d7774fd369d2",
      "x": 429,
      "y": -13236,
      "width": 234,
      "height": 50
    },
    {
      "type": "text",
      "text": "## graph",
      "id": "23eddb404fbf4a6c",
      "x": -602,
      "y": -12027,
      "width": 162,
      "height": 50
    },
    {
      "id": "7d869178592bef7c",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/quick_sort.md",
      "x": 4200,
      "y": -10829,
      "width": 235,
      "height": 56
    },
    {
      "type": "text",
      "text": "## Tree",
      "id": "63a48420548bf081",
      "x": 2701,
      "y": -11039,
      "width": 119,
      "height": 56
    },
    {
      "type": "text",
      "text": "## Suffix Array",
      "id": "cd839c71473a277c",
      "x": 2897,
      "y": -11039,
      "width": 220,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Sort",
      "id": "b0154eb3790336b9",
      "x": 4059,
      "y": -11260,
      "width": 141,
      "height": 60
    },
    {
      "id": "bdca31503d7359ec",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/bubble_sort.md",
      "x": 3260,
      "y": -10827,
      "width": 254,
      "height": 58
    },
    {
      "id": "5b452e7cd64e7108",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/insertion_sort.md",
      "x": 3540,
      "y": -10829,
      "width": 262,
      "height": 56
    },
    {
      "id": "3f25773328497ba4",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/selection_sort.md",
      "x": 3840,
      "y": -10827,
      "width": 290,
      "height": 54
    },
    {
      "id": "47b79037bbcb7dd5",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/merge_sort.md",
      "x": 4458,
      "y": -10829,
      "width": 235,
      "height": 56
    },
    {
      "type": "text",
      "text": "## $O(nlogn)$",
      "id": "1bab3ec85f6ab239",
      "x": 4506,
      "y": -11040,
      "width": 140,
      "height": 56
    },
    {
      "type": "text",
      "text": "## $O(n^2)$",
      "id": "979518b496fb28f3",
      "x": 3618,
      "y": -11039,
      "width": 106,
      "height": 56
    },
    {
      "type": "text",
      "text": "## Coincidence",
      "id": "6d2d0ff5ddd18843",
      "x": 1961,
      "y": -11039,
      "width": 242,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Num Theory",
      "id": "431e48d95e191a39",
      "x": 978,
      "y": -11039,
      "width": 222,
      "height": 60
    },
    {
      "type": "text",
      "text": "# MATH",
      "id": "6f04e4009c11d00b",
      "x": 978,
      "y": -11273,
      "width": 167,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Probability",
      "id": "de80f6c6cc4267a2",
      "x": 1244,
      "y": -11039,
      "width": 214,
      "height": 60
    },
    {
      "type": "text",
      "text": "## String",
      "id": "2313b24189f528e9",
      "x": 2361,
      "y": -11262,
      "width": 141,
      "height": 60
    },
    {
      "type": "text",
      "text": "## DP",
      "id": "b691b2300ec935c4",
      "x": 2277,
      "y": -11039,
      "width": 135,
      "height": 67
    },
    {
      "type": "text",
      "text": "## Trie",
      "id": "cde88989c88a4f7b",
      "x": 2502,
      "y": -11039,
      "width": 118,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Largest Common Subsecuance ",
      "id": "47c69d28370af79a",
      "x": 2142,
      "y": -10841,
      "width": 270,
      "height": 83
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/union_find.md",
      "id": "df0a290141c28265",
      "x": 1214,
      "y": -12641,
      "width": 573,
      "height": 617
    },
    {
      "id": "ead524379c5a2d3f",
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sorting/heap_sort.md",
      "x": 4720,
      "y": -10829,
      "width": 235,
      "height": 56
    },
    {
      "type": "text",
      "text": "## Game Theory",
      "id": "fa906d4f635b1177",
      "x": 1529,
      "y": -11039,
      "width": 250,
      "height": 60
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/binary search tree.md",
      "id": "f6e68e230a19c353",
      "x": 1293,
      "y": -13313,
      "width": 416,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Getting Started\n\n### pip\n```shell\npip install\n```\n\n### Ruff Linter\n```shell\npip install ruff\n```\n\n### iPython\n```shell\npip install ipython\n```",
      "id": "27205e6d8e228570",
      "x": 3239,
      "y": -14985,
      "width": 499,
      "height": 420
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/queues.md",
      "id": "53ec46f2c9f5c3a4",
      "x": -2078,
      "y": -12865,
      "width": 400,
      "height": 400
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/linked_list.md",
      "id": "d3e6bfdeb574d0c6",
      "x": -2027,
      "y": -13448,
      "width": 400,
      "height": 400
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/array.md",
      "id": "57a80deb3744d4a7",
      "x": -1775,
      "y": -14008,
      "width": 396,
      "height": 451
    },
    {
      "type": "text",
      "text": "# Array - List\n\nC++ - Array\n```cpp\nint foo[5];\nint baz[5] = {};\nint table[3][5];\n\n\n// passing array as parameter\n// we can omit the size of the first dimension, but not the second\nvoid print(int A[][3]);\n\n// size of array\nint arr_size = sizeof(arr) / sizeof(arr[0]);\n```\n\nC++ - Vector\n```c++\nvector <int> v;\n```\n\nPython\n```python\narr: list[int] = []\n\narr.append(1);\narr.clear()\narr.count(2)\narr.index(x)\narr.insert(n, x)\narr = arr.reverse()\n```\n\nJava\n```java\nprivate List<T> l = ArrayList<>();\nprivate List<T> l = List<>()\n```\n\n",
      "id": "2551f61a48357776",
      "x": -2867,
      "y": -14181,
      "width": 603,
      "height": 797
    },
    {
      "type": "text",
      "text": "## Queue - Stack\n\nC++\n```cpp\nqueue <int> q;\nstack <int> s; \n```\n\nPython\n```python\nfrom collections import deque\n\nq: deque = deque()\n\nq.append(1)\nq.appendleft(2)\nq.pop()\nq.popleft()\n```\n\nJava\n```java\nprivate LinkedList <T> linkedList = new LinkedList<>();\nprivate Queue <T> q = new Queue<>();  \nprivate Stack <T> s = new Stack<>();\n```",
      "id": "3181dae94051fa44",
      "x": -3094,
      "y": -12938,
      "width": 529,
      "height": 573
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/datastructures/stack.md",
      "id": "b89512a1a378b036",
      "x": -1923,
      "y": -12365,
      "width": 400,
      "height": 400
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/readme.md",
      "id": "fd8be2c07c6849a7",
      "x": -5440,
      "y": -13810,
      "width": 1000,
      "height": 1186
    },
    {
      "type": "text",
      "text": "# Python",
      "id": "d2e676c1cdf082cf",
      "x": 3380,
      "y": -15140,
      "width": 262,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Lambda expression\n\n[Lambda expressions in C++ | Microsoft Learn](https://learn.microsoft.com/en-us/cpp/cpp/lambda-expressions-in-cpp?view=msvc-170)\n\n```cpp\nsort(x, x+n, \n\t [](float a, float b){\n\t\t return (abs(a) < abs(b));\n\t }\n)\n```\n\n![[Pasted image 20230208111237.png]]\n\n1) capture clause (Also known as the lambda-introducer in the C++ specification.)\n2) parameter list Optional. (Also known as the lambda declarator)\n3) mutable specification Optional.\n4) exception-specification Optional.\n5) trailing-return-type Optional.\n6) lambda body.",
      "id": "017f5fa6082abb92",
      "x": 4180,
      "y": -13798,
      "width": 385,
      "height": 295,
      "color": "4"
    },
    {
      "type": "text",
      "text": "# C++ 17",
      "id": "b2956916db4247df",
      "x": 4757,
      "y": -14148,
      "width": 163,
      "height": 50,
      "color": "4"
    },
    {
      "type": "text",
      "text": "## Boilerplate\n\n## import all\n```cpp\n#include <bits/stdc++.h>\n```\n\n## Compiling\n```powershell\ng++ -std=c++17 -O2 -Wall test.cpp -o test\n```\n\n* `-std=c++17`: uses the C++17 standard\n* `-O2`: Optimizes the code \n* `-Wall`: Shows warnings about possible errors\n\n## FastIO input - output\n```cpp\niosbase::sync_with_stdio(false);\ncin.tie(0);\ncout.tie(0);\n```\n",
      "id": "4d6352c550dbcab2",
      "x": 5083,
      "y": -13798,
      "width": 517,
      "height": 452
    },
    {
      "type": "text",
      "text": "## (typedef, macros, constexpr)\n\n```cpp\ntypedef long long ll;\ntypedef vector<int> vi; \ntypedef pair<int,int> ii;\n\n#define F first \n#define S second \n#define PB push_back \n#define MP make_pair\n\n#define FOR(i,a,b) for (int i = a; i <= b; i++)\n```\n\n`typedef` - can be used to give a short name to a data type\n`define` - A macro specifies that certain strings in the code will be changed before the compilation\n",
      "id": "20705e60dda7d292",
      "x": 5342,
      "y": -14540,
      "width": 550,
      "height": 443
    },
    {
      "type": "text",
      "text": "## Numbers\n* 32bit - `int`: [-2*10^9 , 2*10^9]\n* 64bit - `long long`: [-9*10^18, 9*10^18]\n* 128bit - `__int128_t`: [-10^38, 10^38]\n* 64bit - `double`\n* 80bit - `long double`\n\n## Modular Arithmetic:\n\n$$(a + b) \\% m = (a \\% m + b \\% m) \\% m$$\n$$(a − b) \\% m = (a \\% m − b \\% m) \\% m$$\n$$(a · b) \\% m = (a \\% m · b \\% m) \\% m$$\n\nFactorial n mod m\n```cpp\nlong long x = 1;\nfor (int i = 1; i <= n; i++)\n    x = (x*i)%m;\ncout << x << \"\\n\";\n```\n\n> NOTE: \n> Usually we want the remainder to always be between [0...m−1]\n> However, in C++ and other languages, the remainder of a negative number is either (zero or negative).\n> An easy way to make sure there are no negative remainders is to first calculate the remainder as usual and then add m if the result is negative\n\n```cpp\nx = x%m; \nif (x < 0) x += m;\n```\n\nHowever, this is `only needed` when there are subtractions in the code, and the remainder may become negative.\n\n## Print x with 9 decimal places\n```cpp\n// print with 9 decimal places\nprintf(\"%.9f\\n\", x);\n```\n\n## floating point numbers `bad` representation\nA difficulty when using floating point numbers is that some numbers cannot be represented accurately\n\nin the following code, the value of x is slightly smaller than 1, while the correct value would be 1\n```cpp\ndouble x = 0.3*3+0.1; \nprintf(\"%.20f\\n\", x); // 0.99999999999999988898\n```\nIt is risky to compare floating point numbers with the == operator\nA better way to compare floating point numbers is to assume that *two numbers are equal* if the difference between them is less than `ε`, where `ε` is a small number. For example, in the following code `ε = 10^−9`:\n```cpp\nif (abs(a-b) < 1e-9) { // a and b are equal }\n```\n",
      "id": "5e0a1ed237a86b61",
      "x": 5660,
      "y": -13798,
      "width": 591,
      "height": 680
    },
    {
      "type": "text",
      "text": "## for_each\n\n```cpp\n// square nums in a vector\nfor_each(v.begin(), v.end(), \n\t[](int &x){x*=x;};\n)\n```\n\n",
      "id": "a9b1531520cff6c3",
      "x": 4661,
      "y": -13798,
      "width": 356,
      "height": 191,
      "color": "4"
    },
    {
      "type": "text",
      "text": "## DAG",
      "id": "b67912c3389f0b77",
      "x": -93,
      "y": -10829,
      "width": 133,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Tree",
      "id": "690dd3bdd5481667",
      "x": 82,
      "y": -10829,
      "width": 118,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Flow",
      "id": "951054c891d7e636",
      "x": -194,
      "y": -11048,
      "width": 100,
      "height": 60
    },
    {
      "type": "text",
      "text": "# GRAPH",
      "id": "fb241b885bfa09df",
      "x": -1075,
      "y": -11302,
      "width": 176,
      "height": 71
    },
    {
      "type": "text",
      "text": "## SSSP",
      "id": "5b09b35d7befc759",
      "x": -1026,
      "y": -11038,
      "width": 250,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Special",
      "id": "749183d4e2680800",
      "x": 82,
      "y": -11048,
      "width": 147,
      "height": 50
    },
    {
      "type": "text",
      "text": "## segment tree",
      "id": "ca1e0d5b584d9fa8",
      "x": -325,
      "y": -12024,
      "width": 232,
      "height": 59
    },
    {
      "type": "text",
      "text": "## binary indexed tree",
      "id": "854a51b958290acf",
      "x": 67,
      "y": -12024,
      "width": 328,
      "height": 59
    },
    {
      "type": "text",
      "text": "## Bipartite",
      "id": "aafddea968ea9376",
      "x": 229,
      "y": -10829,
      "width": 177,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Combinatorics",
      "id": "8b197736bf8db518",
      "x": 518,
      "y": -11039,
      "width": 241,
      "height": 61
    },
    {
      "id": "eea541286b7278d1",
      "type": "link",
      "url": "https://www.youtube.com/watch?v=GiDsjIBOVoA",
      "x": -209,
      "y": -10336,
      "width": 640,
      "height": 337
    },
    {
      "id": "550c48a2334ab912",
      "type": "link",
      "url": "https://cse442-17f.github.io/Traveling-Salesman-Algorithms/",
      "x": 460,
      "y": -10336,
      "width": 400,
      "height": 400
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/kadane's algorithm.md",
      "id": "8358afb5811c6d44",
      "x": 172,
      "y": -8238,
      "width": 400,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Largest Sum Contiguous Subarray",
      "id": "ab9530157ac7a310",
      "x": 192,
      "y": -8460,
      "width": 334,
      "height": 94
    },
    {
      "type": "text",
      "text": "## MST",
      "id": "2c06c2d84473f9fb",
      "x": -1324,
      "y": -11018,
      "width": 88,
      "height": 58
    },
    {
      "type": "text",
      "text": "## TOPO Sort",
      "id": "090e81c946d9cb44",
      "x": -2132,
      "y": -10771,
      "width": 187,
      "height": 65
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/graph/Kruskal's.md",
      "id": "de3ada766f251605",
      "x": -1680,
      "y": -10536,
      "width": 400,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Shortest Path",
      "id": "c08e97fc746fedca",
      "x": -686,
      "y": -11048,
      "width": 250,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Floyd Warshall",
      "id": "899462ebee7e67e0",
      "x": -899,
      "y": -10834,
      "width": 250,
      "height": 60
    },
    {
      "type": "text",
      "text": "## Prim",
      "id": "1b2d07f028b8c58a",
      "x": -1236,
      "y": -10809,
      "width": 161,
      "height": 61
    },
    {
      "type": "text",
      "text": "## Kruskal",
      "id": "7d887bc70c471362",
      "x": -1560,
      "y": -10799,
      "width": 161,
      "height": 61
    },
    {
      "type": "text",
      "text": "## Dijkstra",
      "id": "99e0df1217af3819",
      "x": -532,
      "y": -10834,
      "width": 250,
      "height": 60
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/math/primes_numbers.md",
      "id": "1b9357c97db998be",
      "x": 1030,
      "y": -10844,
      "width": 230,
      "height": 188
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/binary_search.md",
      "id": "2943991e30707c0b",
      "x": 939,
      "y": -7719,
      "width": 400,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Binary Search",
      "id": "5506f4de93117c32",
      "x": 992,
      "y": -7888,
      "width": 295,
      "height": 50
    },
    {
      "type": "text",
      "text": "## Two Pointers",
      "id": "fa7023ae4f4a62a6",
      "x": 1468,
      "y": -7888,
      "width": 271,
      "height": 60
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/two_pointer.md",
      "id": "f3448be5e17e1fdb",
      "x": 1398,
      "y": -7719,
      "width": 411,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Geometry",
      "id": "38509d60db6426b6",
      "x": 740,
      "y": -10880,
      "width": 192,
      "height": 51
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/recursion.md",
      "id": "440cf5247fa9639c",
      "x": 2733,
      "y": -8590,
      "width": 529,
      "height": 552
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/sliding window.md",
      "id": "2440bcd078bcd794",
      "x": 1889,
      "y": -7719,
      "width": 416,
      "height": 400
    },
    {
      "type": "text",
      "text": "## Sliding Window",
      "id": "ff799d41627fcc0a",
      "x": 1973,
      "y": -7888,
      "width": 249,
      "height": 60
    },
    {
      "type": "text",
      "text": "# Recursion/ Backtracking",
      "id": "c814376c746c9761",
      "x": 2829,
      "y": -8902,
      "width": 275,
      "height": 100
    },
    {
      "type": "text",
      "text": "# DS",
      "id": "8b611d03a942a995",
      "x": 649,
      "y": -8815,
      "width": 111,
      "height": 61
    },
    {
      "type": "text",
      "text": "# ALGORITMS",
      "id": "53e571b7f461b9aa",
      "x": 1369,
      "y": -9423,
      "width": 241,
      "height": 52,
      "color": "6"
    },
    {
      "type": "text",
      "text": "## KMP",
      "id": "c24400ef17ff2e95",
      "x": 1920,
      "y": -10820,
      "width": 82,
      "height": 53
    },
    {
      "type": "text",
      "text": "## Connex Components",
      "id": "15e5e0b6fce8115d",
      "x": -2480,
      "y": -10779,
      "width": 194,
      "height": 73
    },
    {
      "type": "text",
      "text": "## traverse",
      "id": "5cabf0a1e4322d45",
      "x": -2644,
      "y": -10988,
      "width": 164,
      "height": 62
    },
    {
      "type": "text",
      "text": "## DFS",
      "id": "b0acd728aaccd31a",
      "x": -2829,
      "y": -10771,
      "width": 101,
      "height": 60
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/graph/blind-search/dfs.md",
      "id": "4f4ab41afe201f15",
      "x": -2942,
      "y": -10513,
      "width": 330,
      "height": 400
    },
    {
      "type": "text",
      "text": "## BFS",
      "id": "92332b26540150de",
      "x": -3250,
      "y": -10779,
      "width": 101,
      "height": 60
    },
    {
      "type": "file",
      "file": "02 - KNOWLEDGE/dsa/algorithm/graph/blind-search/bfs.md",
      "id": "c3e8c704abdbc608",
      "x": -3368,
      "y": -10513,
      "width": 337,
      "height": 400
    }
  ],
  "edges": [
    {
      "id": "053824fc7c00387c",
      "fromNode": "5506f4de93117c32",
      "fromSide": "bottom",
      "toNode": "2943991e30707c0b",
      "toSide": "top"
    },
    {
      "id": "f829c862f2168026",
      "fromNode": "b2956916db4247df",
      "fromSide": "bottom",
      "toNode": "017f5fa6082abb92",
      "toSide": "top"
    },
    {
      "id": "ed6ca746304692ac",
      "fromNode": "b2956916db4247df",
      "fromSide": "bottom",
      "toNode": "a9b1531520cff6c3",
      "toSide": "top"
    },
    {
      "id": "5327f903de4c11d1",
      "fromNode": "ab9530157ac7a310",
      "fromSide": "bottom",
      "toNode": "8358afb5811c6d44",
      "toSide": "top"
    },
    {
      "id": "f2b9a2fad90f8000",
      "fromNode": "53e571b7f461b9aa",
      "fromSide": "bottom",
      "toNode": "5506f4de93117c32",
      "toSide": "top"
    },
    {
      "id": "01e317cdc39d939e",
      "fromNode": "53e571b7f461b9aa",
      "fromSide": "bottom",
      "toNode": "8b611d03a942a995",
      "toSide": "top"
    },
    {
      "id": "8c204b53c59f8d93",
      "fromNode": "8b611d03a942a995",
      "fromSide": "bottom",
      "toNode": "ab9530157ac7a310",
      "toSide": "top"
    },
    {
      "id": "5770629af08df402",
      "fromNode": "53e571b7f461b9aa",
      "fromSide": "bottom",
      "toNode": "fa7023ae4f4a62a6",
      "toSide": "top"
    },
    {
      "id": "5eef90d93466fcc4",
      "fromNode": "fa7023ae4f4a62a6",
      "fromSide": "bottom",
      "toNode": "f3448be5e17e1fdb",
      "toSide": "top"
    },
    {
      "id": "f2c3d8d972054fb3",
      "fromNode": "b2956916db4247df",
      "fromSide": "bottom",
      "toNode": "4d6352c550dbcab2",
      "toSide": "top"
    },
    {
      "id": "db5f6a433d26f8b0",
      "fromNode": "b2956916db4247df",
      "fromSide": "bottom",
      "toNode": "5e0a1ed237a86b61",
      "toSide": "top"
    },
    {
      "id": "e83e89d865249113",
      "fromNode": "b2956916db4247df",
      "fromSide": "right",
      "toNode": "20705e60dda7d292",
      "toSide": "left"
    },
    {
      "id": "7980ae37b3596cb5",
      "fromNode": "53e571b7f461b9aa",
      "fromSide": "bottom",
      "toNode": "c814376c746c9761",
      "toSide": "top"
    },
    {
      "id": "09db407b79b7f529",
      "fromNode": "c814376c746c9761",
      "fromSide": "bottom",
      "toNode": "440cf5247fa9639c",
      "toSide": "top"
    },
    {
      "id": "d484a58b59345dbc",
      "fromNode": "95fec2fab8bc1c21",
      "fromSide": "top",
      "toNode": "a1465859b4078a9e",
      "toSide": "bottom"
    },
    {
      "id": "b3d5bea87bdff5cf",
      "fromNode": "95fec2fab8bc1c21",
      "fromSide": "right",
      "toNode": "d64af4271b7fbfe1",
      "toSide": "left",
      "label": "example"
    },
    {
      "id": "41372512426d3012",
      "fromNode": "2cc2d7774fd369d2",
      "fromSide": "top",
      "toNode": "95fec2fab8bc1c21",
      "toSide": "bottom"
    },
    {
      "id": "1df54958da4060f5",
      "fromNode": "cd3dd135bbccc0f6",
      "fromSide": "right",
      "toNode": "6b0458c31d8f1f18",
      "toSide": "left",
      "label": "hash based no tree"
    },
    {
      "id": "9067909441d1c62f",
      "fromNode": "2cc2d7774fd369d2",
      "fromSide": "bottom",
      "toNode": "df0a290141c28265",
      "toSide": "left"
    },
    {
      "id": "3dab8b81d30f1792",
      "fromNode": "0899069cb86ec7f5",
      "fromSide": "top",
      "toNode": "57a80deb3744d4a7",
      "toSide": "right",
      "label": "list"
    },
    {
      "id": "8aca7d3c0dbe51e1",
      "fromNode": "0899069cb86ec7f5",
      "fromSide": "top",
      "toNode": "d3e6bfdeb574d0c6",
      "toSide": "right",
      "label": "linked_list"
    },
    {
      "id": "977bad1d7bb52341",
      "fromNode": "0899069cb86ec7f5",
      "fromSide": "left",
      "toNode": "53ec46f2c9f5c3a4",
      "toSide": "right",
      "label": "FIFO"
    },
    {
      "id": "1d9c12cce479c762",
      "fromNode": "0899069cb86ec7f5",
      "fromSide": "bottom",
      "toNode": "b89512a1a378b036",
      "toSide": "right",
      "label": "LIFO"
    },
    {
      "id": "23bcea5dea6cc552",
      "fromNode": "53ec46f2c9f5c3a4",
      "fromSide": "left",
      "toNode": "3181dae94051fa44",
      "toSide": "right",
      "label": "example"
    },
    {
      "id": "4c054d3966475b3a",
      "fromNode": "b89512a1a378b036",
      "fromSide": "left",
      "toNode": "3181dae94051fa44",
      "toSide": "right",
      "label": "example"
    },
    {
      "id": "c2f96c9b56152f6f",
      "fromNode": "d3e6bfdeb574d0c6",
      "fromSide": "left",
      "toNode": "3181dae94051fa44",
      "toSide": "right"
    },
    {
      "id": "f37a60f83f71aac3",
      "fromNode": "57a80deb3744d4a7",
      "fromSide": "left",
      "toNode": "2551f61a48357776",
      "toSide": "right",
      "label": "example"
    },
    {
      "id": "55363224b5824182",
      "fromNode": "84b3961964a48717",
      "fromSide": "left",
      "toNode": "0899069cb86ec7f5",
      "toSide": "right"
    },
    {
      "id": "2f79ae91ef52a6a3",
      "fromNode": "84b3961964a48717",
      "fromSide": "right",
      "toNode": "2cc2d7774fd369d2",
      "toSide": "left"
    },
    {
      "id": "86a9b95c36e7ef8b",
      "fromNode": "84b3961964a48717",
      "fromSide": "bottom",
      "toNode": "d00bd0bd310848a0",
      "toSide": "top"
    },
    {
      "id": "269bd318eda6182c",
      "fromNode": "d00bd0bd310848a0",
      "fromSide": "bottom",
      "toNode": "23eddb404fbf4a6c",
      "toSide": "top"
    },
    {
      "id": "85381ea84ddabf5b",
      "fromNode": "d00bd0bd310848a0",
      "fromSide": "bottom",
      "toNode": "ca1e0d5b584d9fa8",
      "toSide": "top"
    },
    {
      "id": "e06f6f1b141eca73",
      "fromNode": "d00bd0bd310848a0",
      "fromSide": "bottom",
      "toNode": "854a51b958290acf",
      "toSide": "top"
    },
    {
      "id": "47d1ccf8389fd16b",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "5cabf0a1e4322d45",
      "toSide": "top"
    },
    {
      "id": "2b3814a69a1f4ce0",
      "fromNode": "5cabf0a1e4322d45",
      "fromSide": "bottom",
      "toNode": "92332b26540150de",
      "toSide": "top"
    },
    {
      "id": "6c329cc17a06e3a1",
      "fromNode": "5cabf0a1e4322d45",
      "fromSide": "bottom",
      "toNode": "b0acd728aaccd31a",
      "toSide": "top"
    },
    {
      "id": "7c46266d854223cf",
      "fromNode": "5cabf0a1e4322d45",
      "fromSide": "bottom",
      "toNode": "15e5e0b6fce8115d",
      "toSide": "top"
    },
    {
      "id": "6704535615a5a911",
      "fromNode": "5cabf0a1e4322d45",
      "fromSide": "bottom",
      "toNode": "090e81c946d9cb44",
      "toSide": "top"
    },
    {
      "id": "5b75431e7713d28a",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "2c06c2d84473f9fb",
      "toSide": "top"
    },
    {
      "id": "b8ae7633e119c5bd",
      "fromNode": "2c06c2d84473f9fb",
      "fromSide": "bottom",
      "toNode": "7d887bc70c471362",
      "toSide": "top"
    },
    {
      "id": "7f09359fbc06a6d2",
      "fromNode": "2c06c2d84473f9fb",
      "fromSide": "bottom",
      "toNode": "1b2d07f028b8c58a",
      "toSide": "top"
    },
    {
      "id": "93cf9e74d48f3c98",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "5b09b35d7befc759",
      "toSide": "top"
    },
    {
      "id": "f9b3cf562c65ca73",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "c08e97fc746fedca",
      "toSide": "top"
    },
    {
      "id": "2320fe1d3802daa3",
      "fromNode": "c08e97fc746fedca",
      "fromSide": "bottom",
      "toNode": "899462ebee7e67e0",
      "toSide": "top"
    },
    {
      "id": "1566f6ff8024c65e",
      "fromNode": "c08e97fc746fedca",
      "fromSide": "bottom",
      "toNode": "99e0df1217af3819",
      "toSide": "top"
    },
    {
      "id": "ac8e265e41cce2bc",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "951054c891d7e636",
      "toSide": "top"
    },
    {
      "id": "5d7498559cd10b24",
      "fromNode": "fb241b885bfa09df",
      "fromSide": "bottom",
      "toNode": "749183d4e2680800",
      "toSide": "top"
    },
    {
      "id": "ec875b9b53ec1b4d",
      "fromNode": "749183d4e2680800",
      "fromSide": "bottom",
      "toNode": "b67912c3389f0b77",
      "toSide": "top"
    },
    {
      "id": "465c2f983fd9b57b",
      "fromNode": "749183d4e2680800",
      "fromSide": "bottom",
      "toNode": "690dd3bdd5481667",
      "toSide": "top"
    },
    {
      "id": "7d2064b2aa03baf7",
      "fromNode": "749183d4e2680800",
      "fromSide": "bottom",
      "toNode": "aafddea968ea9376",
      "toSide": "top"
    },
    {
      "id": "baa734276a1f6861",
      "fromNode": "6f04e4009c11d00b",
      "fromSide": "bottom",
      "toNode": "8b197736bf8db518",
      "toSide": "top"
    },
    {
      "id": "6279293eee95e53f",
      "fromNode": "6f04e4009c11d00b",
      "fromSide": "bottom",
      "toNode": "431e48d95e191a39",
      "toSide": "top"
    },
    {
      "id": "d922023c9d98d711",
      "fromNode": "6f04e4009c11d00b",
      "fromSide": "bottom",
      "toNode": "de80f6c6cc4267a2",
      "toSide": "top"
    },
    {
      "id": "a834b5aec86e7191",
      "fromNode": "6f04e4009c11d00b",
      "fromSide": "bottom",
      "toNode": "fa906d4f635b1177",
      "toSide": "top"
    },
    {
      "id": "d7544893c07d0c00",
      "fromNode": "2313b24189f528e9",
      "fromSide": "bottom",
      "toNode": "6d2d0ff5ddd18843",
      "toSide": "top"
    },
    {
      "id": "d2e4347db2366d28",
      "fromNode": "6d2d0ff5ddd18843",
      "fromSide": "bottom",
      "toNode": "c24400ef17ff2e95",
      "toSide": "top"
    },
    {
      "id": "5249ca88d1ab2210",
      "fromNode": "2313b24189f528e9",
      "fromSide": "bottom",
      "toNode": "b691b2300ec935c4",
      "toSide": "top"
    },
    {
      "id": "05a59c0ea449bcb7",
      "fromNode": "b691b2300ec935c4",
      "fromSide": "bottom",
      "toNode": "47c69d28370af79a",
      "toSide": "top"
    },
    {
      "id": "6e6c7911d166f980",
      "fromNode": "2313b24189f528e9",
      "fromSide": "bottom",
      "toNode": "cde88989c88a4f7b",
      "toSide": "top"
    },
    {
      "id": "e9169047adf86f53",
      "fromNode": "2313b24189f528e9",
      "fromSide": "bottom",
      "toNode": "63a48420548bf081",
      "toSide": "top"
    },
    {
      "id": "ea5b414e7209280b",
      "fromNode": "2313b24189f528e9",
      "fromSide": "bottom",
      "toNode": "cd839c71473a277c",
      "toSide": "top"
    },
    {
      "id": "495a0d45f6e2b20b",
      "fromNode": "6f04e4009c11d00b",
      "fromSide": "bottom",
      "toNode": "38509d60db6426b6",
      "toSide": "top"
    },
    {
      "id": "920ee0e0cefd9f8e",
      "fromNode": "7d887bc70c471362",
      "fromSide": "bottom",
      "toNode": "de3ada766f251605",
      "toSide": "top"
    },
    {
      "id": "b1392d29827b2f8c",
      "fromNode": "d2e676c1cdf082cf",
      "fromSide": "bottom",
      "toNode": "27205e6d8e228570",
      "toSide": "top"
    },
    {
      "id": "5118964195f6b0bb",
      "fromNode": "53e571b7f461b9aa",
      "fromSide": "bottom",
      "toNode": "ff799d41627fcc0a",
      "toSide": "top"
    },
    {
      "id": "94556c809e777c53",
      "fromNode": "ff799d41627fcc0a",
      "fromSide": "bottom",
      "toNode": "2440bcd078bcd794",
      "toSide": "top"
    },
    {
      "id": "71ea48946f899cdb",
      "fromNode": "b0acd728aaccd31a",
      "fromSide": "bottom",
      "toNode": "4f4ab41afe201f15",
      "toSide": "top"
    },
    {
      "id": "32457d3749781e3a",
      "fromNode": "92332b26540150de",
      "fromSide": "bottom",
      "toNode": "c3e8c704abdbc608",
      "toSide": "top"
    },
    {
      "id": "6fae39b2838c1acd",
      "fromNode": "f6e68e230a19c353",
      "fromSide": "right",
      "toNode": "cd3dd135bbccc0f6",
      "toSide": "left"
    },
    {
      "id": "2cee30915d56ae2a",
      "fromNode": "2cc2d7774fd369d2",
      "fromSide": "right",
      "toNode": "f6e68e230a19c353",
      "toSide": "left"
    },
    {
      "id": "f90a3296084ccde6",
      "fromNode": "431e48d95e191a39",
      "fromSide": "bottom",
      "toNode": "1b9357c97db998be",
      "toSide": "top"
    },
    {
      "id": "3d56e81bb10d48e7",
      "fromNode": "b0154eb3790336b9",
      "fromSide": "bottom",
      "toNode": "979518b496fb28f3",
      "toSide": "top"
    },
    {
      "id": "5fee725d40513255",
      "fromNode": "979518b496fb28f3",
      "fromSide": "bottom",
      "toNode": "bdca31503d7359ec",
      "toSide": "top"
    },
    {
      "id": "c270c197f40b7af0",
      "fromNode": "979518b496fb28f3",
      "fromSide": "bottom",
      "toNode": "5b452e7cd64e7108",
      "toSide": "top"
    },
    {
      "id": "5b30028b4da88a9d",
      "fromNode": "979518b496fb28f3",
      "fromSide": "bottom",
      "toNode": "3f25773328497ba4",
      "toSide": "top"
    },
    {
      "id": "953ccc8666a3f7aa",
      "fromNode": "b0154eb3790336b9",
      "fromSide": "bottom",
      "toNode": "1bab3ec85f6ab239",
      "toSide": "top"
    },
    {
      "id": "44d39e41e3e49b8c",
      "fromNode": "1bab3ec85f6ab239",
      "fromSide": "bottom",
      "toNode": "7d869178592bef7c",
      "toSide": "top"
    },
    {
      "id": "32c48c82d0c0a722",
      "fromNode": "1bab3ec85f6ab239",
      "fromSide": "bottom",
      "toNode": "47b79037bbcb7dd5",
      "toSide": "top"
    },
    {
      "id": "773d69738db40c45",
      "fromNode": "1bab3ec85f6ab239",
      "fromSide": "bottom",
      "toNode": "ead524379c5a2d3f",
      "toSide": "top"
    }
  ],
  "metadata": {}
}